{"version":3,"file":"unicode-properties.browser.es.js","sources":["index.js","browser.js"],"sourcesContent":["const log2 = Math.log2 || (n => Math.log(n) / Math.LN2);\nconst bits = (n) => ((log2(n) + 1) | 0);\n\nconst buildUnicodeProperties = (data, trie) => {\n  // compute the number of bits stored for each field\n  const CATEGORY_BITS = bits(data.categories.length - 1);\n  const COMBINING_BITS = bits(data.combiningClasses.length - 1);\n  const SCRIPT_BITS = bits(data.scripts.length - 1);\n  const EAW_BITS = bits(data.eaw.length - 1);\n  const NUMBER_BITS = 10;\n\n  // compute shift and mask values for each field\n  const CATEGORY_SHIFT = COMBINING_BITS + SCRIPT_BITS + EAW_BITS + NUMBER_BITS;\n  const COMBINING_SHIFT = SCRIPT_BITS + EAW_BITS + NUMBER_BITS;\n  const SCRIPT_SHIFT = EAW_BITS + NUMBER_BITS;\n  const EAW_SHIFT = NUMBER_BITS;\n  const CATEGORY_MASK = (1 << CATEGORY_BITS) - 1;\n  const COMBINING_MASK = (1 << COMBINING_BITS) - 1;\n  const SCRIPT_MASK = (1 << SCRIPT_BITS) - 1;\n  const EAW_MASK = (1 << EAW_BITS) - 1;\n  const NUMBER_MASK = (1 << NUMBER_BITS) - 1;\n\n  const getCategory = (codePoint) => {\n    const val = trie.get(codePoint);\n    return data.categories[(val >> CATEGORY_SHIFT) & CATEGORY_MASK];\n  };\n\n  const getCombiningClass = (codePoint) => {\n    const val = trie.get(codePoint);\n    return data.combiningClasses[(val >> COMBINING_SHIFT) & COMBINING_MASK];\n  };\n\n  const getScript = (codePoint) => {\n    const val = trie.get(codePoint);\n    return data.scripts[(val >> SCRIPT_SHIFT) & SCRIPT_MASK];\n  };\n\n  const getEastAsianWidth = (codePoint) => {\n    const val = trie.get(codePoint);\n    return data.eaw[(val >> EAW_SHIFT) & EAW_MASK];\n  };\n\n  const getNumericValue = (codePoint) => {\n    let val = trie.get(codePoint);\n    let num = val & NUMBER_MASK;\n\n    if (num === 0) {\n      return null;\n    } else if (num <= 50) {\n      return num - 1;\n    } else if (num < 0x1e0) {\n      const numerator = (num >> 4) - 12;\n      const denominator = (num & 0xf) + 1;\n      return numerator / denominator;\n    } else if (num < 0x300) {\n      val = (num >> 5) - 14;\n      let exp = (num & 0x1f) + 2;\n\n      while (exp > 0) {\n        val *= 10;\n        exp--;\n      }\n      return val;\n    } else {\n      val = (num >> 2) - 0xbf;\n      let exp = (num & 3) + 1;\n      while (exp > 0) {\n        val *= 60;\n        exp--;\n      }\n      return val;\n    }\n  };\n\n  const isAlphabetic = (codePoint) => {\n    const category = getCategory(codePoint);\n    return (\n      category === 'Lu' ||\n      category === 'Ll' ||\n      category === 'Lt' ||\n      category === 'Lm' ||\n      category === 'Lo' ||\n      category === 'Nl'\n    )\n  };\n\n  const isDigit = (codePoint) => (\n    getCategory(codePoint) === 'Nd'\n  );\n\n  const isPunctuation = (codePoint) => {\n    const category = getCategory(codePoint);\n    return (\n      category === 'Pc' ||\n      category === 'Pd' ||\n      category === 'Pe' ||\n      category === 'Pf' ||\n      category === 'Pi' ||\n      category === 'Po' ||\n      category === 'Ps'\n    );\n  };\n\n  const isLowerCase = (codePoint) => {\n    return getCategory(codePoint) === 'Ll';\n  };\n\n  const isUpperCase = (codePoint) => (\n    getCategory(codePoint) === 'Lu'\n  );\n\n  const isTitleCase = (codePoint) => (\n    getCategory(codePoint) === 'Lt'\n  );\n\n  const isWhiteSpace = (codePoint) => {\n    const category = getCategory(codePoint);\n    return (\n      category === 'Zs' ||\n      category === 'Zl' ||\n      category === 'Zp'\n    );\n  };\n\n  const isBaseForm = (codePoint) => {\n    const category = getCategory(codePoint);\n    return (\n      category === 'Nd' ||\n      category === 'No' ||\n      category === 'Nl' ||\n      category === 'Lu' ||\n      category === 'Ll' ||\n      category === 'Lt' ||\n      category === 'Lm' ||\n      category === 'Lo' ||\n      category === 'Me' ||\n      category === 'Mc'\n    )\n  };\n\n  const isMark = (codePoint) => {\n    const category = getCategory(codePoint);\n    return (\n      category === 'Mn' ||\n      category === 'Me' ||\n      category === 'Mc'\n    );\n  };\n\n  return {\n    getCategory,\n    getCombiningClass,\n    getScript,\n    getEastAsianWidth,\n    getNumericValue,\n    isAlphabetic,\n    isDigit,\n    isPunctuation,\n    isLowerCase,\n    isUpperCase,\n    isTitleCase,\n    isWhiteSpace,\n    isBaseForm,\n    isMark\n  }\n}\n\nexport default buildUnicodeProperties;\n","import UnicodeTrie from 'unicode-trie';\nimport base64 from 'base64-js';\nimport data from './data.json';\nimport trieData from './trie.json';\nimport buildUnicodeProperties from './index';\n\nconst trie = new UnicodeTrie(base64.toByteArray(trieData.data));\nconst unicodeProperties = buildUnicodeProperties(data, trie);\n\nexport default unicodeProperties;\n"],"names":["log2","Math","n","log","LN2","bits","buildUnicodeProperties","data","trie","CATEGORY_BITS","categories","length","COMBINING_BITS","combiningClasses","SCRIPT_BITS","scripts","EAW_BITS","eaw","NUMBER_BITS","CATEGORY_SHIFT","COMBINING_SHIFT","SCRIPT_SHIFT","EAW_SHIFT","CATEGORY_MASK","COMBINING_MASK","SCRIPT_MASK","EAW_MASK","NUMBER_MASK","getCategory","codePoint","val","get","getCombiningClass","getScript","getEastAsianWidth","getNumericValue","num","numerator","denominator","exp","isAlphabetic","category","isDigit","isPunctuation","isLowerCase","isUpperCase","isTitleCase","isWhiteSpace","isBaseForm","isMark","UnicodeTrie","base64","toByteArray","trieData","unicodeProperties"],"mappings":";;;;;;;AAAA,IAAMA,IAAI,GAAGC,IAAI,CAACD,IAAL,KAAcE,CAAC,IAAID,IAAI,CAACE,GAAL,CAASD,CAAT,IAAcD,IAAI,CAACG,GAAtC,CAAb;;AACA,IAAMC,IAAI,GAAIH,CAAD,IAASF,IAAI,CAACE,CAAD,CAAJ,GAAU,CAAX,GAAgB,CAArC;;AAEA,IAAMI,sBAAsB,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC7C;AACA,MAAMC,aAAa,GAAGJ,IAAI,CAACE,IAAI,CAACG,UAAL,CAAgBC,MAAhB,GAAyB,CAA1B,CAA1B;AACA,MAAMC,cAAc,GAAGP,IAAI,CAACE,IAAI,CAACM,gBAAL,CAAsBF,MAAtB,GAA+B,CAAhC,CAA3B;AACA,MAAMG,WAAW,GAAGT,IAAI,CAACE,IAAI,CAACQ,OAAL,CAAaJ,MAAb,GAAsB,CAAvB,CAAxB;AACA,MAAMK,QAAQ,GAAGX,IAAI,CAACE,IAAI,CAACU,GAAL,CAASN,MAAT,GAAkB,CAAnB,CAArB;AACA,MAAMO,WAAW,GAAG,EAApB,CAN6C;;AAS7C,MAAMC,cAAc,GAAGP,cAAc,GAAGE,WAAjB,GAA+BE,QAA/B,GAA0CE,WAAjE;AACA,MAAME,eAAe,GAAGN,WAAW,GAAGE,QAAd,GAAyBE,WAAjD;AACA,MAAMG,YAAY,GAAGL,QAAQ,GAAGE,WAAhC;AACA,MAAMI,SAAS,GAAGJ,WAAlB;AACA,MAAMK,aAAa,GAAG,CAAC,KAAKd,aAAN,IAAuB,CAA7C;AACA,MAAMe,cAAc,GAAG,CAAC,KAAKZ,cAAN,IAAwB,CAA/C;AACA,MAAMa,WAAW,GAAG,CAAC,KAAKX,WAAN,IAAqB,CAAzC;AACA,MAAMY,QAAQ,GAAG,CAAC,KAAKV,QAAN,IAAkB,CAAnC;AACA,MAAMW,WAAW,GAAG,CAAC,KAAKT,WAAN,IAAqB,CAAzC;;AAEA,MAAMU,WAAW,GAAIC,SAAD,IAAe;AACjC,QAAMC,GAAG,GAAGtB,IAAI,CAACuB,GAAL,CAASF,SAAT,CAAZ;AACA,WAAOtB,IAAI,CAACG,UAAL,CAAiBoB,GAAG,IAAIX,cAAR,GAA0BI,aAA1C,CAAP;AACD,GAHD;;AAKA,MAAMS,iBAAiB,GAAIH,SAAD,IAAe;AACvC,QAAMC,GAAG,GAAGtB,IAAI,CAACuB,GAAL,CAASF,SAAT,CAAZ;AACA,WAAOtB,IAAI,CAACM,gBAAL,CAAuBiB,GAAG,IAAIV,eAAR,GAA2BI,cAAjD,CAAP;AACD,GAHD;;AAKA,MAAMS,SAAS,GAAIJ,SAAD,IAAe;AAC/B,QAAMC,GAAG,GAAGtB,IAAI,CAACuB,GAAL,CAASF,SAAT,CAAZ;AACA,WAAOtB,IAAI,CAACQ,OAAL,CAAce,GAAG,IAAIT,YAAR,GAAwBI,WAArC,CAAP;AACD,GAHD;;AAKA,MAAMS,iBAAiB,GAAIL,SAAD,IAAe;AACvC,QAAMC,GAAG,GAAGtB,IAAI,CAACuB,GAAL,CAASF,SAAT,CAAZ;AACA,WAAOtB,IAAI,CAACU,GAAL,CAAUa,GAAG,IAAIR,SAAR,GAAqBI,QAA9B,CAAP;AACD,GAHD;;AAKA,MAAMS,eAAe,GAAIN,SAAD,IAAe;AACrC,QAAIC,GAAG,GAAGtB,IAAI,CAACuB,GAAL,CAASF,SAAT,CAAV;AACA,QAAIO,GAAG,GAAGN,GAAG,GAAGH,WAAhB;;AAEA,QAAIS,GAAG,KAAK,CAAZ,EAAe;AACb,aAAO,IAAP;AACD,KAFD,MAEO,IAAIA,GAAG,IAAI,EAAX,EAAe;AACpB,aAAOA,GAAG,GAAG,CAAb;AACD,KAFM,MAEA,IAAIA,GAAG,GAAG,KAAV,EAAiB;AACtB,UAAMC,SAAS,GAAG,CAACD,GAAG,IAAI,CAAR,IAAa,EAA/B;AACA,UAAME,WAAW,GAAG,CAACF,GAAG,GAAG,GAAP,IAAc,CAAlC;AACA,aAAOC,SAAS,GAAGC,WAAnB;AACD,KAJM,MAIA,IAAIF,GAAG,GAAG,KAAV,EAAiB;AACtBN,MAAAA,GAAG,GAAG,CAACM,GAAG,IAAI,CAAR,IAAa,EAAnB;AACA,UAAIG,GAAG,GAAG,CAACH,GAAG,GAAG,IAAP,IAAe,CAAzB;;AAEA,aAAOG,GAAG,GAAG,CAAb,EAAgB;AACdT,QAAAA,GAAG,IAAI,EAAP;AACAS,QAAAA,GAAG;AACJ;;AACD,aAAOT,GAAP;AACD,KATM,MASA;AACLA,MAAAA,GAAG,GAAG,CAACM,GAAG,IAAI,CAAR,IAAa,IAAnB;;AACA,UAAIG,IAAG,GAAG,CAACH,GAAG,GAAG,CAAP,IAAY,CAAtB;;AACA,aAAOG,IAAG,GAAG,CAAb,EAAgB;AACdT,QAAAA,GAAG,IAAI,EAAP;AACAS,QAAAA,IAAG;AACJ;;AACD,aAAOT,GAAP;AACD;AACF,GA9BD;;AAgCA,MAAMU,YAAY,GAAIX,SAAD,IAAe;AAClC,QAAMY,QAAQ,GAAGb,WAAW,CAACC,SAAD,CAA5B;AACA,WACEY,QAAQ,KAAK,IAAb,IACAA,QAAQ,KAAK,IADb,IAEAA,QAAQ,KAAK,IAFb,IAGAA,QAAQ,KAAK,IAHb,IAIAA,QAAQ,KAAK,IAJb,IAKAA,QAAQ,KAAK,IANf;AAQD,GAVD;;AAYA,MAAMC,OAAO,GAAIb,SAAD,IACdD,WAAW,CAACC,SAAD,CAAX,KAA2B,IAD7B;;AAIA,MAAMc,aAAa,GAAId,SAAD,IAAe;AACnC,QAAMY,QAAQ,GAAGb,WAAW,CAACC,SAAD,CAA5B;AACA,WACEY,QAAQ,KAAK,IAAb,IACAA,QAAQ,KAAK,IADb,IAEAA,QAAQ,KAAK,IAFb,IAGAA,QAAQ,KAAK,IAHb,IAIAA,QAAQ,KAAK,IAJb,IAKAA,QAAQ,KAAK,IALb,IAMAA,QAAQ,KAAK,IAPf;AASD,GAXD;;AAaA,MAAMG,WAAW,GAAIf,SAAD,IAAe;AACjC,WAAOD,WAAW,CAACC,SAAD,CAAX,KAA2B,IAAlC;AACD,GAFD;;AAIA,MAAMgB,WAAW,GAAIhB,SAAD,IAClBD,WAAW,CAACC,SAAD,CAAX,KAA2B,IAD7B;;AAIA,MAAMiB,WAAW,GAAIjB,SAAD,IAClBD,WAAW,CAACC,SAAD,CAAX,KAA2B,IAD7B;;AAIA,MAAMkB,YAAY,GAAIlB,SAAD,IAAe;AAClC,QAAMY,QAAQ,GAAGb,WAAW,CAACC,SAAD,CAA5B;AACA,WACEY,QAAQ,KAAK,IAAb,IACAA,QAAQ,KAAK,IADb,IAEAA,QAAQ,KAAK,IAHf;AAKD,GAPD;;AASA,MAAMO,UAAU,GAAInB,SAAD,IAAe;AAChC,QAAMY,QAAQ,GAAGb,WAAW,CAACC,SAAD,CAA5B;AACA,WACEY,QAAQ,KAAK,IAAb,IACAA,QAAQ,KAAK,IADb,IAEAA,QAAQ,KAAK,IAFb,IAGAA,QAAQ,KAAK,IAHb,IAIAA,QAAQ,KAAK,IAJb,IAKAA,QAAQ,KAAK,IALb,IAMAA,QAAQ,KAAK,IANb,IAOAA,QAAQ,KAAK,IAPb,IAQAA,QAAQ,KAAK,IARb,IASAA,QAAQ,KAAK,IAVf;AAYD,GAdD;;AAgBA,MAAMQ,MAAM,GAAIpB,SAAD,IAAe;AAC5B,QAAMY,QAAQ,GAAGb,WAAW,CAACC,SAAD,CAA5B;AACA,WACEY,QAAQ,KAAK,IAAb,IACAA,QAAQ,KAAK,IADb,IAEAA,QAAQ,KAAK,IAHf;AAKD,GAPD;;AASA,SAAO;AACLb,IAAAA,WADK;AAELI,IAAAA,iBAFK;AAGLC,IAAAA,SAHK;AAILC,IAAAA,iBAJK;AAKLC,IAAAA,eALK;AAMLK,IAAAA,YANK;AAOLE,IAAAA,OAPK;AAQLC,IAAAA,aARK;AASLC,IAAAA,WATK;AAULC,IAAAA,WAVK;AAWLC,IAAAA,WAXK;AAYLC,IAAAA,YAZK;AAaLC,IAAAA,UAbK;AAcLC,IAAAA;AAdK,GAAP;AAgBD,CAlKD;;ACGA,IAAMzC,IAAI,GAAG,IAAI0C,WAAJ,CAAgBC,MAAM,CAACC,WAAP,CAAmBC,QAAQ,CAAC9C,IAA5B,CAAhB,CAAb;AACA,IAAM+C,iBAAiB,GAAGhD,sBAAsB,CAACC,IAAD,EAAOC,IAAP,CAAhD;;;;"}